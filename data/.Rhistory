# Suvi Virtanen, Open Data Science course exercise 3 - data wrangling
# access the libraries
library(dplyr)
library(ggplot2)
# read data
por <- read.csv("student-por.csv", sep = ";", header = T)
str(por)
dim(por)
math <- read.csv("student-mat.csv", sep = ";", header = T)
str(mat)
dim(mat)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
# see the new column names
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# Select columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
# glimpse at the new combined data
glimpse(alc)
# save data
write.csv(alc, file = "alc.csv")
# Suvi Virtanen, Open Data Science course exercise 3 - data wrangling
# access the libraries
library(dplyr)
library(ggplot2)
# read data
por <- read.csv("student-por.csv", sep = ";", header = T)
str(por)
dim(por)
math <- read.csv("student-mat.csv", sep = ";", header = T)
str(mat)
dim(mat)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
# see the new column names
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# Select columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
# glimpse at the new combined data
glimpse(alc)
# save data
write.csv(alc, file = "alc.csv")
# Suvi Virtanen, Open Data Science course exercise 3 - data wrangling
# access the libraries
library(dplyr)
library(ggplot2)
# read data
por <- read.csv("student-por.csv", sep = ";", header = T)
str(por)
dim(por)
math <- read.csv("student-mat.csv", sep = ";", header = T)
str(mat)
dim(mat)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
# see the new column names
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# Select columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
# glimpse at the new combined data
glimpse(alc)
# save data
write.csv(alc, file = "alc.csv")
# Anton JyrkiÃ¤inen, 16.11.2018, week 3 R exercise.
# Data used: https://archive.ics.uci.edu/ml/machine-learning-databases/00320/
# install.packages("dplyr")
library(dplyr)
# Files load to variables.
student_mat <- read.table("C:/Users/Anton/Documents/IODS-project/student-mat.csv", sep = ";", header=TRUE)
student_por <- read.table("C:/Users/Anton/Documents/IODS-project/student-por.csv", sep = ";", header=TRUE)
# Structure
str(student_mat)
str(student_por)
# Dimensions
dim(student_mat)
dim(student_por)
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
math_por <- inner_join(student_mat, student_por, by = join_by, suffix = c(".math",".por"))
str(math_por)
dim(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# columns that were not used for joining the data
notjoined_columns <- colnames(student_mat)[!colnames(student_mat) %in% join_by]
# print out the columns not used for joining
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column  vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else {
# else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
glimpse(alc)
setwd("C:/Users/Anton/Documents/IODS-project/data/")
getwd()
# Saving the dataset locally
write.csv(alc,file="alc")
# Suvi Virtanen, Open Data Science course exercise 3 - data wrangling
# access the libraries
library(dplyr)
library(ggplot2)
# read data
por <- read.csv("student-por.csv", sep = ";", header = T)
str(por)
dim(por)
math <- read.csv("student-mat.csv", sep = ";", header = T)
str(mat)
dim(mat)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
# see the new column names
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# Select columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
# glimpse at the new combined data
glimpse(alc)
# save data
write.csv(alc, file = "alc.csv")
# Suvi Virtanen, Open Data Science course exercise 3 - data wrangling
# access the libraries
library(dplyr)
library(ggplot2)
# read data
por <- read.csv("student-por.csv", sep = ";", header = T)
str(por)
dim(por)
math <- read.csv("student-mat.csv", sep = ";", header = T)
str(mat)
dim(mat)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
# see the new column names
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# Select columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
# glimpse at the new combined data
glimpse(alc)
# save data
write.csv(alc, file = "alc.csv")
# read data
por <- read.csv("student-por.csv", sep = ";", header = T)
# Suvi Virtanen, Open Data Science course exercise 3 - data wrangling
# access the libraries
library(dplyr)
library(ggplot2)
# read data
por <- read.csv("student-por.csv", sep = ";", header = T)
str(por)
dim(por)
math <- read.csv("student-mat.csv", sep = ";", header = T)
str(mat)
dim(mat)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
# see the new column names
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# Select columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
# glimpse at the new combined data
glimpse(alc)
# save data
write.csv(alc, file = "alc.csv")
# Antti Ketola, 18.11.2018. This is the data wrangling script for week 3 workshop.
library(dplyr)
# Reading the data of student-por.csv and student-mat.csv
mat <- read.table("data/student-mat.csv", sep = ";", header=TRUE)
por <- read.table("data/student-por.csv", sep = ";", header=TRUE)
# Next we explore the structure and dimensions of the data:
str(mat)
dim(mat)
# The commands give the structue and the dimensons of mat data (395 rows, 33 columns)
str(por)
dim(por)
# The commands give the structue and the dimensons of por data (649 rows, 33 columns)
# As the next step we will join the two sets using school, sex, age, address, famsize
# Pstatus, Medu, Fedu, Mjob, Fjob, reason, nursery and internet as identifiers
# we start by creating an object "join_by"
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Fedu", "Medu", "Mjob", "Fjob", "reason", "nursery", "internet")
# Next we use the inner_join(function) to combine the to datasets
mat_por <- inner_join(mat, por, by = join_by, suffix = c(".mat", ".por"))
# Then we remove the duplicate answers in the joined data, we use the same method as in DataCamp
alc <- select(mat_por, one_of(join_by))
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
for(column_name in notjoined_columns) {
two_columns <- select(mat_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# Next we create a new column alc_use as an average of weekday and weekend consumption using mutate command
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# We also create a new logical column high_use, with value TRUE in case alc_use > 2, otherwise FALSE
alc <- mutate(alc, high_use = alc_use > 2)
# Finally, we will have a glimpse at the data using glimpse function
glimpse(alc)
# The function indiates there is now 382 observations and 35 variables. Everything seems to be in order.
# As the last step we save the modied data to the data folder
write.csv(alc, file = "data/alc.CSV", row.names = FALSE)
# Antti Ketola, 18.11.2018. This is the data wrangling script for week 3 workshop.
library(dplyr)
# Reading the data of student-por.csv and student-mat.csv
mat <- read.table("data/student-mat.csv", sep = ";", header=TRUE)
por <- read.table("data/student-por.csv", sep = ";", header=TRUE)
# Next we explore the structure and dimensions of the data:
str(mat)
dim(mat)
# The commands give the structue and the dimensons of mat data (395 rows, 33 columns)
str(por)
dim(por)
# The commands give the structue and the dimensons of por data (649 rows, 33 columns)
# As the next step we will join the two sets using school, sex, age, address, famsize
# Pstatus, Medu, Fedu, Mjob, Fjob, reason, nursery and internet as identifiers
# we start by creating an object "join_by"
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Fedu", "Medu", "Mjob", "Fjob", "reason", "nursery", "internet")
# Next we use the inner_join(function) to combine the to datasets
mat_por <- inner_join(mat, por, by = join_by, suffix = c(".mat", ".por"))
# Then we remove the duplicate answers in the joined data, we use the same method as in DataCamp
alc <- select(mat_por, one_of(join_by))
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
for(column_name in notjoined_columns) {
two_columns <- select(mat_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# Next we create a new column alc_use as an average of weekday and weekend consumption using mutate command
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# We also create a new logical column high_use, with value TRUE in case alc_use > 2, otherwise FALSE
alc <- mutate(alc, high_use = alc_use > 2)
# Finally, we will have a glimpse at the data using glimpse function
glimpse(alc)
# The function indiates there is now 382 observations and 35 variables. Everything seems to be in order.
# As the last step we save the modied data to the data folder
write.csv(alc, file = "data/alc.CSV", row.names = FALSE)
# Suvi Virtanen, Open Data Science course exercise 3 - data wrangling
# access the libraries
library(dplyr)
library(ggplot2)
# read data
por <- read.csv("student-por.csv", sep = ";", header = T)
str(por)
dim(por)
math <- read.csv("student-mat.csv", sep = ";", header = T)
str(mat)
dim(mat)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
# see the new column names
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# Select columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
# glimpse at the new combined data
glimpse(alc)
# save data
write.csv(alc, file = "alc.csv")
# Antti Ketola, 18.11.2018. This is the data wrangling script for week 3 workshop.
library(dplyr)
# Reading the data of student-por.csv and student-mat.csv
mat <- read.table("data/student-mat.csv", sep = ";", header=TRUE)
por <- read.table("data/student-por.csv", sep = ";", header=TRUE)
# Next we explore the structure and dimensions of the data:
str(mat)
dim(mat)
# The commands give the structue and the dimensons of mat data (395 rows, 33 columns)
str(por)
dim(por)
# The commands give the structue and the dimensons of por data (649 rows, 33 columns)
# As the next step we will join the two sets using school, sex, age, address, famsize
# Pstatus, Medu, Fedu, Mjob, Fjob, reason, nursery and internet as identifiers
# we start by creating an object "join_by"
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Fedu", "Medu", "Mjob", "Fjob", "reason", "nursery", "internet")
# Next we use the inner_join(function) to combine the to datasets
mat_por <- inner_join(mat, por, by = join_by, suffix = c(".mat", ".por"))
# Then we remove the duplicate answers in the joined data, we use the same method as in DataCamp
alc <- select(mat_por, one_of(join_by))
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
for(column_name in notjoined_columns) {
two_columns <- select(mat_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
# Next we create a new column alc_use as an average of weekday and weekend consumption using mutate command
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# We also create a new logical column high_use, with value TRUE in case alc_use > 2, otherwise FALSE
alc <- mutate(alc, high_use = alc_use > 2)
# Finally, we will have a glimpse at the data using glimpse function
glimpse(alc)
# The function indiates there is now 382 observations and 35 variables. Everything seems to be in order.
# As the last step we save the modied data to the data folder
write.csv(alc, file = "data/alc.CSV", row.names = FALSE)
#Petteri Salo
#14.11.2018
#Creating new dataset by combining math and Portugueses
#students performance datas from UCI Machine Learning Repository
#(https://archive.ics.uci.edu/ml/datasets/Student+Performance)
#3
math <- read.table("data/student-mat.csv", sep=";", header=TRUE)
por <- read.table("data/student-por.csv", sep=";", header=TRUE)
str(math) #The data contains 395 observations of 33 variables
#with datatypes: int and factor.
dim(math) #and it means that there is 395 rows and 33 colums
str(por) #The data contains 649 observations of 33 variables (int, factor).
dim(por) #and it means that there is 649 rows and 33 colums
#4
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
# join the two datasets by the selected identifiers
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
str(math_por) #382 obs. 53 variabs (int and factor).
dim(math_por) # 382 row and 53 column
#5
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# for every column name not used for joining...
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
# glimpse at the new combined data
glimpse(alc)
#6
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
#7
# glimpse at the alc data
glimpse(alc)
setwd("C:/Users/Pedu/Documents/GitHub/IODS-project")
write.table(alc, file = "data/alc.txt")
########################################
